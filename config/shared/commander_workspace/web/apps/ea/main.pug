{% extends "../../common/layout.pug" %}
{% load filters_and_tags %}

block header
        i.fa-fw.fa.fa-signal
        | External Applications

block main
  .row.row-fluid
    article.col-xs-10.col-sm-8.col-md-6.col-lg-6(style="max-width:450px")
      #wid-EA-CmdAndData.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 General
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th Cmd Count
                    td
                      span(data-sage="{'tlm': [{'name':'/CFS/EA/CmdCounter'}]}") ---
                  tr
                    th Error Count
                    td
                      span(data-sage="{'tlm': [{'name':'/CFS/EA/ErrCounter'}]}") ---
                  tr
                    th Active App
                    td
                      span(data-sage="{'tlm': [{'name':'/CFS/EA/ActiveApp'}]}") ---
                  tr
                    th Active App CPU Utilization
                    td
                      span(data-sage="{'tlm': [{'name':'/CFS/EA/ActiveAppUtil'}]}") ---
                  tr
                    th Active App PID
                    td
                      span(data-sage="{'tlm': [{'name':'/CFS/EA/ActiveAppPID'}]}") ---
                  tr
                    th Last App Run
                    td
                      span(data-sage="{'tlm': [{'name':'/CFS/EA/LastAppRun'}]}") ---
                  tr
                    th Last App Status
                    td
                      span(data-sage="{'tlm': [{'name':'/CFS/EA/LastAppStatus'}]}") ---

            footer
              button.btn.btn-primary(data-sage="{'cmd': {'name':'/CFS/EA/NoOp'}}") No-Op
              button.btn.btn-primary(data-sage="{'cmd': {'name':'/CFS/EA/Reset'}}") Reset
              button.btn.btn-primary(data-sage="{'cmd': {'name':'/CFS/EA/StartApp'}}") Start App
              button.btn.btn-primary(data-sage="{'cmd': {'name':'/CFS/EA/StopApp'}}") Stop App

    article.col-xs-12.col-sm-12.col-md-6.col-lg-3(style="width:500px")
      #wid-CFE-ES-AppCtrl-ApplicationControl.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Application Control
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed.table-app-status
                tbody
                  tr
                    th App Name
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_Name'}]}") ---
                  tr
                    th ID
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_AppID'}]}") ---
                  tr
                    th Type
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_Type'}]}") ---
                  tr
                    th Entry Point
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_EntryPoint'}]}") ---
                  tr
                    th File Name
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_FileName'}]}") ---
                  tr
                    th Stack Size
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_StackSize'}]}") ---
                  tr
                    th Module ID
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_ModuleID'}]}") ---
                  tr
                    th Addr valid
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_AddressesAreValid'}]}") ---
                  tr
                    th Code addr
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_CodeAddress', 'format':'0x%08x'}]}") ---
                  tr
                    th Code size
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_CodeSize'}]}") ---
                  tr
                    th Data Addr
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_DataAddress', 'format':'0x%08x'}]}") ---
                  tr
                    th Data Size
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_DataSize'}]}") ---
                  tr
                    th BSS Addr
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_BSSAddress', 'format':'0x%08x'}]}") ---
                  tr
                    th BSS Size
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_BSSSize'}]}") ---
                  tr
                    th Start Addr
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_StartAddress', 'format':'0x%08x'}]}") ---
                  tr
                    th Exception Action
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_ExceptionAction'}]}") ---
                  tr
                    th Priority
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_Priority'}]}") ---
                  tr
                    th Main Task ID
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_MainTaskId'}]}") ---
                  tr
                    th Execution Counter
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_ExecutionCounter'}]}") ---
                  tr
                    th Main Task Name
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_MainTaskName'}]}") ---
                  tr
                    th Child Task Count
                    td
                     span(data-sage="{'tlm': [{'name': '/CFS/CFE_ES/AppInfo_NumOfChildTasks'}]}") ---
            .btn-group.dropup(style="margin-top: 10px")
              button.btn.btn-primary(data-sage="{'cmd': {'name': '/CFS/CFE_ES/QueryOne', 'argument':[{'name':'Name', 'value':'EA'}]}}") Query
              button.btn.btn-primary(data-sage="{'cmd': {'name': '/CFS/CFE_ES/StartApp', 'argument':[{'name':'Name', 'value':'EA'},{'name':'EntryPoint', 'value':'EA_AppMain'},{'name':'FileName', 'value':'/cf/apps/EA.so'},{'name':'StackSize', 'value':'32768'},{'name':'ExceptionAction', 'value':'0'},{'name':'Priority', 'value':'40'}]}}") Start
              button.btn.btn-primary(data-sage="{'cmd': {'name': '/CFS/CFE_ES/StopApp', 'argument':[{'name':'Name', 'value':'EA'}]}}") Stop
              button.btn.btn-primary(data-sage="{'cmd': {'name': '/CFS/CFE_ES/RestartApp', 'argument':[{'name':'Name', 'value':'EA'}]}}") Restart
              button.btn.btn-primary(data-sage="{'cmd': {'name': '/CFS/CFE_ES/ReloadApp', 'argument':[{'name':'Name', 'value':'EA'},{'name':'FileName', 'value':'/cf/apps/EA.so'}]}}") Reload

  .row

    article.col-xs-12.col-sm-12.col-md-6.col-lg-4(style="width:600px")
      #wid-HS-CPUtil.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 CPU Utilization
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            #CPU_Util.chart(style="height:425px, width:100%")

        script.
          var schDef = {
              'slotCount':200,
              'entriesPerSlot':5,
              'appName':'EA',
              slots:[
                {'id':199, 'activities':[2,3,4]}],
              groups:[
                {'name':'SCH_GROUP_EA', 'id':0x04000000}]};

    article.col-xs-12.col-sm-12.col-md-12.col-lg-8
      #wid-SCH-Diag-Entries.jarviswidget.jarviswidget-color-blueDark(style="width: 860px" data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Scheduler
            button.btn.btn-xs.btn-primary.btn-labeled(data-sage="{'cmd':{'name':'/CFS/SCH/SendDiagTlm'}}") Send Schedule
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th(style="width: 150px") Cmd Count
                    td
                      span(data-sage="{'tlm': [{'name':'/CFS/SCH/CmdCounter'}]}") ---
                  tr
                    th Error Count
                    td
                      span(data-sage="{'tlm': [{'name':'/CFS/SCH/ErrCounter'}]}") ---
            .table-responsive
              table.table.table-bordered.table-condensed
                thead
                  tr
                    th(style="width: 100px") Slot #
                    th(style="width: 100px") Activity #
                    th(style="width: 150px") State
                    th MsgID
                    th(style="width: 150px") Action
                tbody
                  {% for each in obj.schDef.slots %}
                  {% for acts in each.activities %}
                  tr
                    td {{each.id}}
                    td {{acts}}
                    td
                      span(data-sage="{tlm:[{name:'/CFS/SCH/EntryState_{{obj.schDef.entriesPerSlot|multi:each.id|add:acts}}'}]}") ---
                    td
                      span(data-sage="{tlm:[{name:'/CFS/SCH/MsgID_{{obj.schDef.entriesPerSlot|multi:each.id|add:acts}}'}]}") ---
                    td
                      .btn-group.dropup
                        button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdEnableEntry) Ena
                        button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdDisableEntry) Dis
                    {% endfor %}
                  {% endfor %}
            .table-responsive
              table.table.table-bordered.table-condensed
                thead
                  tr
                    th(style="width: 100px") Group Name
                    th(style="width: 100px") Group ID
                    th(style="width: 150px") Action
                tbody
                  {% for each in obj.schDef.groups %}
                  tr
                    td {{each.name}}
                    td(style="font-family: monospace") {{ each.id|hex }}
                    td
                      .btn-group.dropup
                        button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdEnableGroup) Ena
                        button.btn.btn-xs.btn-primary.btn-labeled(data-sage= cmdDisableGroup) Dis
                  {% endfor %}
  .row
    article.col-xs-12.col-sm-12.col-md-10.col-lg-6(style="width:500px")
      #wid-EA-Events.jarviswidget.jarviswidget-color-blueDark(data-widget-editbutton='false')
        header
          span.widget-icon
            i.fa.fa-table
          h2 Event Filter
        div
          .jarviswidget-editbox
            input.form-control(type='text')
          .widget-body
            .table-responsive
              table.table.table-condensed
                tbody
                  tr
                    th(style="width:250px") CFE EVS Cmd Count
                    td(style="width:150px")
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_EVS/CmdCounter'}]}") ---
                  tr
                    th CFE EVS Cmd Err Count
                    td
                      span(data-sage="{'tlm': [{'name': '/CFS/CFE_EVS/ErrCounter'}]}") ---
                  tr
                    th App Events
                    td
                      .btn-group
                        button.btn.btn-xs.btn-primary(data-sage="{'cmd': {'name':'/CFS/CFE_EVS/EnableAppEvents', 'argument':[{'name':'AppName', 'value':'EA'}]}}") Enable
                        button.btn.btn-xs.btn-primary(data-sage="{'cmd': {'name':'/CFS/CFE_EVS/DisableAppEvents', 'argument':[{'name':'AppName', 'value':'EA'}]}}") Disable
                        button.btn.btn-xs.btn-primary(data-sage="{'cmd': {'name':'/CFS/CFE_EVS/ResetAllFilters', 'argument':[{'name':'AppName', 'value':'EA'}]}}") Reset
                  tr
                    th Event Types
                    td
                  tr
                    td(style="padding-left: 20px !important") Critical
                    td
                      .btn-group
                        button.btn.btn-xs.btn-primary(data-sage="{'cmd': {'name':'/CFS/CFE_EVS/EnableAppEventType', 'argument':[{'name':'AppName', 'value':'EA'},{'name':'Critical', 'value':'Ignored'},{'name':'Error', 'value':'Ignored'},{'name':'Information', 'value':'Set'},{'name':'Debug', 'value':'Ignored'},{'name':'Spare', 'value':'0'}]}}") Enable
                        button.btn.btn-xs.btn-primary(data-sage="{'cmd': {'name':'/CFS/CFE_EVS/DisableAppEventType', 'argument':[{'name':'AppName', 'value':'EA'},{'name':'Critical', 'value':'Ignored'},{'name':'Error', 'value':'Ignored'},{'name':'Information', 'value':'Set'},{'name':'Debug', 'value':'Ignored'},{'name':'Spare', 'value':'0'}]}}") Disable
                  tr
                    td(style="padding-left: 20px !important")  Error
                    td
                      .btn-group
                        button.btn.btn-xs.btn-primary(data-sage="{'cmd': {'name':'/CFS/CFE_EVS/EnableAppEventType', 'argument':[{'name':'AppName', 'value':'EA'},{'name':'Critical', 'value':'Ignored'},{'name':'Error', 'value':'Set'},{'name':'Information', 'value':'Ignored'},{'name':'Debug', 'value':'Ignored'},{'name':'Spare', 'value':'0'}]}}") Enable
                        button.btn.btn-xs.btn-primary(data-sage="{'cmd': {'name':'/CFS/CFE_EVS/DisableAppEventType', 'argument':[{'name':'AppName', 'value':'EA'},{'name':'Critical', 'value':'Ignored'},{'name':'Error', 'value':'Set'},{'name':'Information', 'value':'Ignored'},{'name':'Debug', 'value':'Ignored'},{'name':'Spare', 'value':'0'}]}}") Disable
                  tr
                    td(style="padding-left: 20px !important")  Info
                    td
                      .btn-group
                        button.btn.btn-xs.btn-primary(data-sage="{'cmd': {'name':'/CFS/CFE_EVS/EnableAppEventType', 'argument':[{'name':'AppName', 'value':'EA'},{'name':'Critical', 'value':'Ignored'},{'name':'Error', 'value':'Ignored'},{'name':'Information', 'value':'Set'},{'name':'Error', 'value':'Ignored'},{'name':'Spare', 'value':'0'}]}}") Enable
                        button.btn.btn-xs.btn-primary(data-sage="{'cmd': {'name':'/CFS/CFE_EVS/DisableAppEventType', 'argument':[{'name':'AppName', 'value':'EA'},{'name':'Critical', 'value':'Ignored'},{'name':'Error', 'value':'Ignored'},{'name':'Information', 'value':'Set'},{'name':'Debug', 'value':'Ignored'},{'name':'Spare', 'value':'0'}]}}") Disable
                  tr
                    td(style="padding-left: 20px !important")  Debug
                    td
                      .btn-group
                        button.btn.btn-xs.btn-primary(data-sage="{'cmd': {'name':'/CFS/CFE_EVS/EnableAppEventType', 'argument':[{'name':'AppName', 'value':'EA'},{'name':'Critical', 'value':'Ignored'},{'name':'Error', 'value':'Ignored'},{'name':'Information', 'value':'Ignored'},{'name':'Debug', 'value':'Set'},{'name':'Spare', 'value':'0'}]}}") Enable
                        button.btn.btn-xs.btn-primary(data-sage="{'cmd': {'name':'/CFS/CFE_EVS/DisableAppEventType', 'argument':[{'name':'AppName', 'value':'EA'},{'name':'Critical', 'value':'Ignored'},{'name':'Error', 'value':'Ignored'},{'name':'Information', 'value':'Ignored'},{'name':'Debug', 'value':'Set'},{'name':'Spare', 'value':'0'}]}}") Disable
                  tr
                    th Event IDs
                    td

                    script.
                      var eventDef = {
                        appName:'EA',
                        events:[
                          {'name':'EA_INIT_INF_EID', eventID:1},
                          {'name':'EA_CONFIG_TABLE_INF_EID', eventID:2},
                          {'name':'EA_CDS_INF_EID', eventID:3},
                          {'name':'EA_CMD_INF_EID', eventID:4},
                          {'name':'EA_ERR_EID', eventID:5},
                          {'name':'EA_INIT_ERR_EID', eventID:6},
                          {'name':'EA_CONFIG_TABLE_ERR_EID', eventID:7},
                          {'name':'EA_CDS_ERR_EID', eventID:8},
                          {'name':'EA_CMD_ERR_EID', eventID:9},
                          {'name':'EA_PIPE_ERR_EID', eventID:10},
                          {'name':'EA_MSGID_ERR_EID', eventID:11},
                          {'name':'EA_MSGLEN_ERR_EID', eventID:12},
                          {'name':'EA_CHILD_TASK_START_EID', eventID:13},
                          {'name':'EA_CHILD_TASK_START_ERR_EID', eventID:14},
                          {'name':'EA_CMD_NOOP_EID', eventID:15},
                          {'name':'EA_CMD_RESET_EID', eventID:16}]
                        };

                    {% for each in obj.eventDef.events %}
                    tr
                      td(style='padding-left: 20px !important') {{each.name}}
                      td
                        .btn-group
                          button.btn.btn-xs.btn-primary(data-sage= cmdSetFilter) Set
                          button.btn.btn-xs.btn-primary(data-sage= cmdResetFilter) Reset
                          button.btn.btn-xs.btn-primary(data-sage= cmdAddEventFilter) Add
                          button.btn.btn-xs.btn-primary(data-sage= cmdDeleteEventFilter) Delete
                    {% endfor %}


  script.
    var CpuUtilData = [];

    $(function () {
      function legendFormatter(label, series) {
        return '<div ' +
           'style="color:white;font-size:8pt;text-align:left;padding:4px;padding-left:10px">' +
           label + '</div>';
      };

      var UtilGraph = $.plot($("#CPU_Util"), [],{
          xaxis : {
            mode : 'time',
            font : {
              color: "#ffffff"
            }
          },
          yaxis : {
            min : 0,
            max : 105,
            font : {
              color: "#ffffff"
            }
          },
          series : {
            lines : {
              show : true
            },
            points: {
              show: false
            }
          },
          legend: {
            show: true,
            labelFormatter: legendFormatter,
            labelBoxBorderColor: 'rgba(255, 255, 255, 0.0)',
            noColumns: 1,
            position: 'ne',
            margin: [10,10],
            backgroundColor: null,
            backgroundOpacity: 0,
            container: null,
            sorted: false
          },
          grid: {
            show: true,
            //aboveData: boolean
            //color: '#ffffff',
            //backgroundColor: color/gradient or null
            //margin: number or margin object
            //labelMargin: number
            //axisMargin: number
            //markings: [{ color: "#ffffff" }],
            //markings: array of markings or (fn: axes -> array of markings)
            //borderWidth: number or object with "top", "right", "bottom" and "left" properties with different widths
            //borderColor: color or null or object with "top", "right", "bottom" and "left" properties with different colors
            //minBorderMargin: number or null
            //clickable: boolean
            //hoverable: boolean
            //autoHighlight: boolean
            //mouseActiveRadius: number
          }
        }
      );

      var CpuUtilCount = 0;
      var MaxCount = 120;
      var ignoreCount = 3;
      var prevCpuUtil = -1;
      var updateInterval = 1000;
      var count = 0;

      session.subscribe({
        'tlm': [
          {'name': '/CFS/EA/ActiveAppUtil'}
        ]},
        function (params) {
          count = count + 1;
          if(ignoreCount > 0){
            ignoreCount = ignoreCount - 1;
          } else {
            if (CpuUtilData.length >= MaxCount) {
              CpuUtilData = CpuUtilData.slice(1);
            }

            console.log('' + count + ': ' + params);
            console.log(params);

            var timeStamp = new Date(params.acquisitionTime);
            var CpuUtil = params.engValue.floatValue;

            CpuUtilData.push([timeStamp, CpuUtil]);
          }
      });

      function update() {
        UtilGraph.setData(
          [{
            data: CpuUtilData,
            label: "CPU Utilization",
            color: '#ff00ff',
            threshold: [{
              below: 5,
              color: '#ff00ff'
            },{
              below: 50,
              color: "yellow"
            },{
              below: 110,
              color: "red"
            }]
          }]);


        // since the axes don't change, we don't need to call plot.setupGrid()
        UtilGraph.setupGrid();
        UtilGraph.draw();
        setTimeout(update, updateInterval);
      }

      update();
    });
